#devopsdemo - pipeline

name: $(date:yyyyMMdd)$(rev:.rr)

stages:
  - stage: 'build'
    condition: succeeded()
    displayName: 'build-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'build process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet build
  
  - stage: 'test'
    condition: succeeded()
    displayName: 'test-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'test process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet tool install --global dotnet-sonarscanner
              dotnet sonarscanner begin /k:"devopsdemo2020" /o:"smith-justin" /d:sonar.login="a85a96cc03261b25d7ab46e078616bbf8cf7fc41" /d:sonar.host.url="https://sonarcloud.io/"
              dotnet build
              dotnet test -p:CollectCoverage=true
              dotnet sonarscanner end /d:sonar.login="a85a96cc03261b25d7ab46e078616bbf8cf7fc41 "

  - stage: 'pack'
    condition: succeeded()
    dependsOn:
      - test
    displayName: 'pack-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'pack process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
              dotnet publish
  
  - stage: 'deploy'
    condition: succeeded()
    dependsOn:
      - test
    displayName: 'deploy-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'deploy process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
              echo 'Hello deploy my old friend~~~~~~~~~~~~~~~~!'

trigger:
  branches:
    include:
      - master

variables:
  sonar: a85a96cc03261b25d7ab46e078616bbf8cf7fc41